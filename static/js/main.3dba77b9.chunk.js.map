{"version":3,"sources":["logo.svg","container/index.js","container/counter/index.js","App.js","index.js"],"names":["Counter","useState","count","setCount","useEffect","console","log","onClick","preState","React","Component","App","appState","setAppState","className","src","logo","alt","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2MAAe,MAA0B,iC,eCSzC,SAASA,IAAU,MAMSC,mBAAS,GANlB,mBAMVC,EANU,KAMHC,EANG,KA0BjB,OAVAC,qBAAU,WAGR,OAAO,WACLC,QAAQC,IAAI,gBAEb,IAKD,gCACGD,QAAQC,IAAI,YACb,wBAAQC,QArBU,kBAAMJ,GAAS,SAACK,GAAD,OAAcA,EAAW,MAqB1D,0BACA,8BAAMN,OAMGO,I,mCC3COA,IAAMC,UCqCbC,MAhCf,WAAgB,IAAD,EACmBV,mBAAS,KAD5B,mBACNW,EADM,KACIC,EADJ,KAGb,OACE,qBAAKC,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,sCACO,8CADP,0BAGA,yBAAQV,QAAS,kBAAMM,EAAYD,EAAW,IAA9C,8BACoBA,KAenBA,GAAY,KAAO,cAAC,EAAD,UCpB5BM,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.3dba77b9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","// var react = require(\"React\");\nimport React, { useEffect, useState } from \"react\";\n\n// arrow function ( fat function )\n\n// function useState(initialValue) {\n//   return [state, setState];\n// }\n\nfunction Counter() {\n  // spread operator\n  // _\n\n  //(1) (firstMount)\n  //not running (secondMount)\n  const [count, setCount] = useState(0);\n\n  const increaseCount = () => setCount((preState) => preState + 1);\n\n  function autoIncrease() {\n    setCount(count + 1);\n  }\n\n  //(3) DID mount, END LIFECYLE i (firstMount)\n  //(2) DID update (secondMount)\n  useEffect(() => {\n    //\n    // const timerID = setInterval(() => autoIncrease(), 1000);\n    return () => {\n      console.log(\"unmount 2\");\n    };\n  }, []);\n\n  //(2) (firstMount)\n  //(1) secondMount\n  return (\n    <div>\n      {console.log(\"render 1\")}\n      <button onClick={increaseCount}>increase ONE</button>\n      <div>{count}</div>\n    </div>\n  );\n}\n\n// USE MEMO, CALL BACK\nexport default React.memo(Counter);\nexport { Counter };\n","import React from \"react\";\n\nclass Counter extends React.Component {\n  //(1) (firstMount)\n  //not running (secondMount)\n  constructor(props) {\n    super(props);\n    this.state = { count: this.props.initCount || 0 };\n    this.increasing = this.increasing.bind(this);\n  }\n\n  // (3) (firstMount)\n  // (3) (secondMount)\n  componentDidMount() {\n    // context this, what is this?, what is self?.\n    console.log(\"3 did first mount\");\n    // this.timerID = setInterval(() => this.autoIncrease(), 1000);\n\n    // event listern api dom\n    // settimeout, ...\n  }\n\n  // firstUnMount\n  componentWillUnmount() {\n    console.log(\"unmuont 1\");\n\n    // debounce, throttle\n    clearInterval(this.timerID);\n  }\n\n  //(1) should update secondMount\n  // shouldComponentUpdate(_, nextState) {\n  //   // Chá»‘ng rerender\n  //   console.log(this.state.count, \"0 CURRENT STATE\");\n  //   console.log({ nextState });\n  //   return this.state.count !== nextState.count;\n  // }\n\n  //2 did update secondMount\n  componentDidUpdate() {\n    console.log(\"2, DID UPDATE\");\n  }\n\n  // autoIncrease() {\n  //   this.setState({\n  //     count: this.state.count + 1,\n  //   });\n  // }\n\n  increasing() {\n    this.setState({\n      count: this.state.count + 1,\n    });\n  }\n\n  // (2)\n  // (1)\n  render() {\n    console.log(\"RENDER, 1\");\n\n    return (\n      <div>\n        <h1>Hello, class!</h1>\n        <button onClick={this.increasing}>Increase One</button>\n        <h2>count: {this.state.count}.</h2>\n      </div>\n    );\n  }\n}\n\nexport default React.memo(Counter);\nexport { Counter };\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\n// import CounterMemo from \"./container\";\nimport { Counter } from \"./container\";\nimport { Counter as CounterClass } from \"./container/counter\";\nimport React, { useState } from \"react\";\n\nfunction App() {\n  const [appState, setAppState] = useState(100);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <button onClick={() => setAppState(appState + 1)}>\n          change app state {appState}\n        </button>\n        {/* <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a> */}\n        {/* <CounterMemo /> */}\n        {/* // Seperation of concernF */}\n        {/* <Counter /> */}\n        {/* {appState >= 102 ? null : <CounterClass />} */}\n        {/* {/* {appState >= 102 && <CounterClass />} */}\n        {appState <= 102 && <Counter />}\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// Componenet, State, Props, Lifecycle, Side Effect\n\n// MODULE => ES6\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n// import reportWebVitals from './reportWebVitals';\n\n// <button> => <Button>\n// state, props => Context API, Redux (...)\n// Lifecycle, Side Effect\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}